---
  - name: Create LDAP service user
    ldap_entry:
      dn: "uid={{ ansible_fqdn }},ou={{ item.service }},ou=TechnicalUsers,{{ auth_ldap_domain_ldap }}"
      server_uri: "{{ auth_ldap_ansible_url }}"
      objectClass:
        - top
        - inetOrgPerson
      bind_dn: "cn=Directory Manager"
      bind_pw: "{{ auth_ldap_admin_pwd }}"
      state: present
      attributes:
        uid: "{{ ansible_fqdn }}"
        cn: "{{ item.service }} on {{ ansible_fqdn }}"
        sn: "Serviceaccount"
    register: userchanged

  - name: Kerberize LDAP user
    when: userchanged.changed
    become: True
    command: kadmin.local addprinc -randkey -x dn="uid={{ ansible_fqdn }},ou={{ item.service }},ou=TechnicalUsers,{{ auth_ldap_domain_ldap }}" +requires_preauth "{{ item.service }}/{{ ansible_fqdn }}@{{ auth_ldap_domain|upper }}"
    tags:
      - skip_ansible_lint

  - name: Check whether keytab exists
    become: True
    stat:
      path: "{{ item.keytab }}"
    register: ktstat

  - name: Check whether keytab contains service user credentials
    become: True
    when: ktstat.stat.exists
    shell: "klist -k {{ item.keytab|quote }} | grep {{ item.service }}/{{ ansible_fqdn }}@{{ auth_ldap_domain|upper }}"
    register: ktlist
    failed_when: False
    changed_when: False

  - name: Export LDAP service user keytab
    when: (item.keytab is defined) and ((not ktstat.stat.exists) or (ktlist.rc != 0))
    become: True
    command: "kadmin.local ktadd -k {{ item.keytab }} {{ item.service }}/{{ ansible_fqdn }}@{{ auth_ldap_domain|upper }}"

  - name: Set keytab permissions
    when: (item.keytab is defined)
    become: True
    file:
      path: "{{ item.keytab }}"
      owner: "{{ item.ktowner }}"
      group: "{{ item.ktgroup }}"
      mode: "{{ item.ktmode }}"
